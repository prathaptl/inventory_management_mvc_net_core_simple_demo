@{
    ViewBag.Path = new List<string>() { "Product - Add / Edit" };
}
@model ProductViewModel
@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}
@section Head{
    <link href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css" rel="stylesheet">
}

<div class="" id="app">
    <div class="form-row">
        <div class="col-md-6">
            <div class="position-relative form-group">
                <label class="">Code</label>
                <input placeholder="Product Code" type="text" class="form-control" v-model="model.Code">
            </div>
        </div>
        <div class="col-md-6">
            <div class="position-relative form-group">
                <label class="">Name</label>
                <input placeholder="Product Name" type="text" class="form-control" v-model="model.Name">
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-6">
            <div class="position-relative form-group">
                <label class="">Price</label>
                <input placeholder="" type="number" class="form-control" v-model="model.Price">
            </div>
        </div>
        <div class="col-md-6">
            <div class="position-relative form-group">
                <label class="">Current Qty</label>
                <input placeholder="" type="number" class="form-control" v-model="model.CurrentQty">
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-6">
            <div class="position-relative form-check">
                <input type="checkbox" class="form-check-input" v-model="model.Active">
                <label class="form-check-label">Active</label>
            </div>
        </div>
    </div>
    <br>
    <div align="right">
        <a href="/Product/Index" class="mt-2 btn btn-danger">Cancel</a>
        <button class="mt-2 btn btn-primary" v-on:click="save()">Save</button>
    </div>
</div>
@section Scripts{
    <script src="https://unpkg.com/vue@2"></script>
    <script src="https://unpkg.com/vue-select@2"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://unpkg.com/vue"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <script>

        Vue.component('v-select', VueSelect.VueSelect);

        var app = new Vue({
            el: '#app',
            components: {

            },
            data: {
                model: @Html.Raw(Json.Serialize(Model)),
                isSubmited: false,
                error: false,
                errorMessage: "",
            },
            created() {
            },
            mounted() {

            },
            methods: {

                save() {
                    debugger;

                    var jsonData = JSON.stringify(this.model);
                    var url = '/Product/Edit';
                    axios({
                        method: 'post',
                        dataType: 'json',
                        url: url,
                        async: false,
                        data: "data=" + btoa(unescape(encodeURIComponent(jsonData))),
                    }).then(response => {
                        var res = response.data;
                        if (res.success) {

                            Swal.fire({
                                icon: 'success',
                                title: 'Your work has been saved',
                                showConfirmButton: true,

                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = "/Product/Index";
                                }
                            });

                        }
                        else {

                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                //text: res.error,
                                html: '<pre>' + res.error + '</pre>',
                                customClass: {
                                    popup: 'format-pre'
                                }
                            });

                        }
                    }).catch(e => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Something went wrong (e)',
                            text: "",
                        });
                    });
                },
            },

            computed: {

            },
            watch: {
            }
        });
    </script>
}
